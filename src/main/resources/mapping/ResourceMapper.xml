<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loki.server.dao.ResourceDao">
  <cache eviction="LRU" type="com.loki.server.cache.RedisCache"/>
  <resultMap id="resourceDao" type="com.loki.server.entity.Resource">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="admin_creator_id" jdbcType="INTEGER" property="adminCreatorId" />
    <result column="admin_updater_id" jdbcType="INTEGER" property="adminUpdaterId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id,create_time,update_time,admin_creator_id,admin_updater_id,name,url,description,type,sort,status,pic,parent_id
  </sql>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.loki.server.entity.Resource">
		insert into resource(create_time,admin_creator_id,name,url,description,type,sort,status,pic,parent_id) 
		values(now(),#{adminCreatorId},#{name},#{url},#{description},#{type},#{sort},#{status},#{pic},#{parentId})
	</insert>

  <update id="update" parameterType="com.loki.server.entity.Resource">
  	update resource SET update_time=now(),admin_updater_id=#{adminUpdaterId},name=#{name},url=#{url},description=#{description},type=#{type},sort=#{sort},status=#{status},pic=#{pic},parent_id=#{parentId} where id=#{id}
  </update>
  
  <select id="findById" parameterType="int" resultMap="resourceDao">
		select <include refid="Base_Column_List" /> 
		from resource
		where id=#{_parameter}
  </select>
  
  <select id="findAll" resultMap="resourceDao">
		select <include refid="Base_Column_List" /> 
		from resource
  </select>
  
  <delete id="delete" parameterType="int">
		delete from resource where id=#{_parameter}
	</delete>
</mapper>