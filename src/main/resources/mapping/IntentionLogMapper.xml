<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loki.server.dao.IntentionLogDao">
  <cache eviction="LRU" type="com.loki.server.cache.RedisCache"/>
  <resultMap id="intentionLogDO" type="com.loki.server.entity.IntentionLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="available_amount" jdbcType="DECIMAL" property="availableAmount" />
    <result column="change_amount" jdbcType="DECIMAL" property="changeAmount" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="relation_type" jdbcType="VARCHAR" property="relationType" />
    <result column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="intention_id" jdbcType="INTEGER" property="intentionId" />
    <result column="log_role" jdbcType="VARCHAR" property="logRole" />
    <result column="log_operator_id" jdbcType="INTEGER" property="logOperatorId" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id,create_time,available_amount,change_amount,content,relation_type,relation_id,intention_id,log_role,log_operator_id
  </sql>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.loki.server.entity.IntentionLog">
		insert into intention_log(create_time,available_amount,change_amount,content,relation_type,relation_id,intention_id,log_role,log_operator_id) 
		values(now(),#{availableAmount},#{changeAmount},#{content},#{relationType},#{relationId},#{intentionId},#{logRole},#{logOperatorId})
	</insert>

  <update id="update" parameterType="com.loki.server.entity.IntentionLog">
  	update intention_log SET available_amount=#{availableAmount},change_amount=#{changeAmount},content=#{content},relation_type=#{relationType},relation_id=#{relationId},intention_id=#{intentionId},log_role=#{logRole},log_operator_id=#{logOperatorId} where id=#{id}
  </update>
  
  <select id="findById" parameterType="int" resultMap="intentionLogDO">
		select <include refid="Base_Column_List" /> 
		from intention_log
		where id=#{_parameter}
  </select>
  
  <select id="findAll" resultMap="intentionLogDO">
		select <include refid="Base_Column_List" /> 
		from intention_log
  </select>
  
  <select id="findByParam" resultMap="intentionLogDO">
		select <include refid="Base_Column_List" /> 
		from intention_log
		<where>
			<if test="createTimeStart != null">
			 	<![CDATA[
					create_time>=UNIX_TIMESTAMP(#{createTimeStart})
				]]>
			</if>
			<if test="createTimeEnd != null">
			 	<![CDATA[
					and create_time<=UNIX_TIMESTAMP(#{createTimeEnd})
				]]>
			</if>
			<if test="logRole != null and logRole != ''">
				and log_role=#{logRole}
			</if>
			<if test="intentionId != null and intentionId != 0">
				and intention_id=#{intentionId}
			</if>
			<if test="logOperatorId != null and logOperatorId != 0">
				and log_operator_id=#{logOperatorId}
			</if>
			<if test="relationType != null and relationType != ''">
				and relation_type=#{relationType}
			</if>
			<if test="relationId != null and relationId != 0">
				and relation_id=#{relationId}
			</if>
		</where>
		ORDER BY
		<choose>
			<when test="sortName!=null">
				${sortName}
				<if test="sortOrder!=null">
					${sortOrder}
				</if>
			</when>
			<otherwise>
				id desc
			</otherwise>
		</choose>
  </select>
  
  <delete id="delete" parameterType="int">
		delete from intention_log where id=#{_parameter}
	</delete>
</mapper>