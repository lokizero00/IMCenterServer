<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loki.server.dao.UserCollectionDao">
  <cache eviction="LRU" type="com.loki.server.cache.RedisCache"/>
  <resultMap id="userCollectionDO" type="com.loki.server.entity.UserCollection">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="updater_id" jdbcType="INTEGER" property="updaterId" />
    <result column="trade_id" jdbcType="INTEGER" property="tradeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id,create_time,update_time,creator_id,updater_id,trade_id,user_id,type
  </sql>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.loki.server.entity.UserCollection">
		insert into user_collection(create_time,creator_id,trade_id,user_id,type) 
		values(now(),#{creatorId},#{tradeId},#{userId},#{type})
	</insert>

  <update id="update" parameterType="com.loki.server.entity.UserCollection">
  	update user_collection SET update_time=now(),updater_id=#{updaterId},trade_id=#{tradeId},user_id=#{userId},type=#{type} where id=#{id}
  </update>
  
  <select id="findById" parameterType="int" resultMap="userCollectionDO">
		select <include refid="Base_Column_List" /> 
		from user_collection
		where id=#{_parameter}
  </select>
  
  <select id="findByParam" resultMap="userCollectionDO">
		select <include refid="Base_Column_List" /> 
		from user_collection
		<where>
			<if test="userId!=null and userId!=0">
				user_id=#{userId}
			</if>
			<if test="tradeId!=null and tradeId!=0">
				and trade_id=#{tradeId}
			</if>
			<if test="type!=null and type!=''">
				and type=#{type}
			</if>
		</where>
		ORDER BY
		 <choose>
	        <when test="sortName!=null">
	                ${sortName}
	            <if test="sortOrder!=null">
	                ${sortOrder}
	            </if>
	        </when>
	        <otherwise>
	            id desc
	        </otherwise>
	     </choose>
  </select>
  
  <select id="findAll" resultMap="userCollectionDO">
		select <include refid="Base_Column_List" /> 
		from user_collection
  </select>
  
  <delete id="delete" parameterType="int">
		delete from user_collection where id=#{_parameter}
	</delete>
</mapper>